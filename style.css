

/* This is a css style document for creating a webpage during a course. */
/* The course is called "HTML and CSS". */
/* and is provided by Lexicon Sweden. */
/* The course is part of the program "Frontend developer" */
/* Warning: This is very wordy, and specifically goes into translating CSS to Python so that anybody can understand it.
/*

/* Enforces margins and padding for all elements and pseudo-elements. */
/* \* means wild card, \:: precedes a specific pseudo-element */
/* \::before refers to the space before an element. */
/* \::after refers to the space after an element. */
/*   
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default spacing by setting everything to zero. */
/* Again, the \* is the wild card. */
* {
  margin: 1em;
  padding: 0;
  font: inherit;
}

/* Dark mode user-agent-styles. */
/* The the two values are of the same priority and dark will be chosen if the users settings are set to dark mode. */
html {
  color-scheme: dark light;
}

/* Setting the minimum height of the body. */
/* vh=viewport height. 100vh means 100% of the viewport. */
body {
  min-height: 100vh;
}

/*SL-settings*/

/*Header*/
header {
  display:flex;
  svg{
  }
} 


  h1 {

  }

  nav {
    ul {
      display: flex;
      justify-content: space-between;
      align-items: center;
      list-style-type: none;
      gap: 0.5rem;
      padding: 0;
      margin: 0;
      
      a {
      padding: 1rem;
      }
      
    }

  }



/* Responsive images/videos */
/* Block refers to block-level elements, which start on a newline etc. */
/* The max-width is set to 100% which forces them to resize into the available screen size. */ 
img,
picture,
svg,
video {
  display: block;
  max-width: 100%;
}

/* Make headings wrap better layout-wise. */
/* There are some mixed messages here, apparently it's under revision. */
h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

/* Setting to make figure caption attractive. */
/* ch stands for character. */
p,
li,
figcaption {
  text-wrap: pretty;
  max-width: 55ch;
}

/* This is for or container queries, landmarks as containers. */
/* :is() is a CSS pseudo-class function that takes a selector list as its argument. */
/* > is a combinator that selects the direct child of the parent element, here the body element. */ 
/* Look at the > as an arrow pointing to the child element. */
/* The :is() function is used to group selectors and the first element in this "list" is "body > :is(header, footer)" and the second element is "main". */
body > :is(header, footer), main 
  {
  container-type: inline-size;
  }

/* Remove list style (set it to none), but keep it as a list for Safari browser - use with <ul role="list">. */
/* Attribute="role", value="list" */
/* The square brackets [] are used to select elements with a specific attribute. */
[role="list"] {
  list-style: none;
  margin: 1em;
  padding: 0;
}

/* Theme */
/* Importing a font from Google Fonts. */
/* Apparently, it is better to add this from the html file. */
@import url("https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap");

/* Setting up the color scheme. */
/* The root element is the highest-level "parent" of the DOM. */
/* The root element is the html element and everything is a child of the root element. */
:root {
  --clr-neutral-100: hsl(0, 0%, 100%);    /* All custom properties are prefixed with "--". */
  --clr-neutral-200: hsl(0, 0%, 87%);     /* The values are in HSL format. */
  --clr-neutral-300: hsl(0, 0%, 57%);     /* HSL stands for Hue, Saturation, Lightness. */
  --clr-neutral-400: hsl(0, 0%, 27%); 
  --clr-neutral-800: hsl(0, 0%, 17%);
  --clr-neutral-900: hsl(0, 0%, 12%);

  --clr-green-100: hsl(169, 11%, 93%);
  --clr-green-200: hsl(169, 51%, 58%);
  --clr-green-400: hsl(169, 86%, 28%);
  --clr-green-800: hsl(169, 86%, 12%);
  --clr-green-900: hsl(169, 80%, 12%);

  --clr-robust: hsl(221, 63%, 32%);
  --clr-green: hsl(110, 63%, 32%);
  --clr-flower: hsl(2, 92%, 33%);
  --clr-colorful: hsl(303, 55%, 47%);
  --clr-sunloving: hsl(27, 88%, 33%);
  --clr-air: hsl(180, 84%, 27%);
  --clr-decorative: hsl(278, 79%, 40%);
  --clr-edible: hsl(68, 61%, 30%);
  --clr-easy: hsl(224, 86%, 58%);
  --clr-fragrant: hsl(327, 51%, 47%);
  --clr-fast: hsl(218, 11%, 34%);

  /* This custom property is implemented using the var function. */
  /* Horizontal and vertical offset, blur radius, and color. */
  --border-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);  /* The value is a list of two. */

  --font-base: "Open Sans", "Segoe UI", Tahoma, sans-serif; /* This is a list of four font families in th order of priority. A Font Stack. */ 

  --fw-400: 400
  ;  /* The values are font weights. */
  --fw-500: 500;
  --fw-600: 600;
  --fw-700: 700;
  --fw-800: 800;
  --fw-900: 900;

  --fs-100: 0.625rem;  /* The values are font sizes. */
  --fs-200: 0.75rem;
  --fs-400: 1rem;
  --fs-500: 1.25rem;
  --fs-600: 1.5rem;
  --fs-700: 2rem;
  --fs-800: 2.5rem;
  --fs-900: 3rem;

  --clr-accent: var(--clr-green-400); 
  --clr-accent-light-1: var(--clr-green-100);

  --clr-primary-light-1: var(--clr-neutral-100);
  --clr-primary-light-2: var(--clr-neutral-200);
  --clr-primary-light-3: var(--clr-neutral-300);
  --clr-primary: var(--clr-neutral-400);
  --clr-primary-dark: var(--clr-neutral-800);

  --fw-regular: var(--fw-400);
  --fw-medium: var(--fw-500);
  --fw-semi-bold: var(--fw-600);
  --fw-bold: var(--fw-700);
  --fw-x-bold: var(--fw-900);
}  /*Root element style ends here*/

/* Utilities */

/* This class is used for accessibility purposes. */
/* This information is not visual, and should therefore be hidden for the user that has not opted for the webreader option. */
.visually-hidden {
  clip: rect(0 0 0 0);     /* Used for absolutely positioned elements. It means that that only the content inside of the rectangle is visible. */
  clip-path: inset(50%); 
  height: 1px;
  overflow: hidden; 
  position: absolute;      /* The element is fixed on a particular coordinate in the document. */
  white-space: nowrap;     /* The text will not wrap to the next line. */
  width: 1px;
}

/* Composition */

/* The container .flow is used to create space between elements. */
/* The "+" selects the direct siblings within the .flow container. */
/* In the special case of the last element, the * + * will actually be * since there are no children within the same flow container. */
.flow > * + * {                                      
  margin-block-start: var(--flow-space, 1em);
}

/* Specification of global/base styles. */
/* First, the properties for which both h2 and h3 have the same values.
h2,
h3 {
  font-weight: var(--fw-bold);
  line-height: 1;
}

/* The properties specific to h2. */
h2 {
  font-size: var(--fs-700);
}

/* The properties specific to h3. */
h3 {
  font-size: var(--fs-600);
  font-weight: var(--fw-semi-bold);
  line-height: 2em;
}

/* Styles for links. */
a {
  text-decoration: none; /* This removes the underline from the link. */
  color: var(--clr-accent);
}

/* Hovering effects. */
/* As I understand it, if either one of hover or focus-visible is fulfilled, the specified effect will be applied. */
a:hover, a:focus-visible  /* :focus-visible is a pseudo class */
    {  
    color: var(--clr-primary-light-1);
    text-decoration: underline;
      }


/* Specific styles for the body. */
body {
  font-family: var(--font-base);
  background-color: var(--clr-accent-light-1);
  color: var(--clr-primary-dark);
}

/* Getting a grid. */
/* Basic reset */
* {
  margin: 1em;
  padding: 0;
  box-sizing: border-box;
}

/* Grid container */
.grid-container {
  display: grid;
  grid-template-areas:
    "header header"
    "sidebar main"
    "footer footer";
  grid-template-columns: 1fr 3fr;
  grid-template-rows: auto 1fr auto;
  gap: 2em;
  height: 20vh;
}

/* Grid items */
.header {
  grid-area: header;
  background-color: var(--clr-primary-light-1);
  padding: 10px;
  text-align: center;
}

.sidebar {
  grid-area: sidebar;
  background-color: var(--clr-accent);
  padding: 20px;
}

.main {
  grid-area: main;
  background-color: var(--clr-primary);
  padding: 20px;
}

.footer {
  grid-area: footer;
  background-color: var(--clr-primary-dark);
  padding: 20px;
  text-align: center;
}

/* Custom properties for colors */
:root {
  --clr-primary-light-1: #f0f0f0;
  --clr-accent: #8bc34a;
  --clr-primary: #3f51b5;
  --clr-primary-dark: #303f9f;
}


.bg-neutral-100 {
  background-color: var(--clr-neutral-100);
}

/* The following changes the behavior of the nav bar. */
li {
  display: inline;
}

/*SL*/
main {
  margin-block: 1rem;
}

nav, main {
  width: clamp(16rem, 90vw, 70rem);
  margin-inline: auto;

}